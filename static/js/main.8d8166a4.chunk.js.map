{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/navbar.jsx","app.jsx","index.js"],"names":["Habit","handleIncrement1","props","onIncrement","habit","handleDecrement1","onDecrement","handleDelete1","onDelete","console","log","this","name","count","className","onClick","PureComponent","HabitAddForm","memo","formRef","React","createRef","inputRef","ref","onSubmit","event","preventDefault","current","value","onAdd","reset","type","placeholder","Habits","handleIncrement","handleDecrement","handleDelete","handleAdd","habits","map","id","onReset","Component","Navbar","totalCount","App","state","item","setState","filter","Date","now","handlleReset","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d8166a4.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\nclass Habit extends PureComponent {\r\n\r\n    componentDidMount() {\r\n        console.log(`habit: ${this.props.habit.name} mounted`);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(`habit: ${this.props.habit.name} will unmount`);\r\n    }\r\n\r\n    handleIncrement1 = () => {\r\n        this.props.onIncrement(this.props.habit);\r\n    }\r\n\r\n    handleDecrement1 = () => {\r\n        this.props.onDecrement(this.props.habit);\r\n    }\r\n\r\n    handleDelete1 = () => {\r\n        this.props.onDelete(this.props.habit);\r\n    }\r\n\r\n    render() {\r\n        console.log(\"habit : \" + this.props.habit.name);\r\n        const {name, count} = this.props.habit;\r\n        return (\r\n            <li className=\"habit\">\r\n                <span className=\"habit-name\">{name}</span>\r\n                <span className=\"habit-count\">{count}</span>\r\n                <button className=\"habit-button habit-increase\" onClick={this.handleIncrement1}>\r\n                    <i className=\"fas fa-plus-square\"></i>\r\n                </button>\r\n                <button className=\"habit-button habit-decrease\" onClick={this.handleDecrement1}>\r\n                    <i className=\"fas fa-minus-square\"></i>\r\n                </button>\r\n                <button className=\"habit-button habit-delete\" onClick={this.handleDelete1}>\r\n                    <i className=\"fas fa-trash\"></i>\r\n                </button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Habit;","import React, { memo } from 'react';\r\n\r\nconst HabitAddForm = memo(props => {\r\n    const formRef = React.createRef(); // 함수 안이라서 const로 지역변수를 설정해준다\r\n    const inputRef = React.createRef(); // 함수 안이라서 const로 지역변수를 설정해준다\r\n\r\n    const onSubmit = event => { // 함수 안이라서 const로 지역변수를 설정해준다\r\n        event.preventDefault(); // submit될 때 페이지의 리프레시 막는다\r\n        const name = inputRef.current.value; // inputRef 안에 있는 value를 받아온다\r\n        name && props.onAdd(name); // name이 있다면 props에 전달된 onAdd라는 함수에 name을 전달해 준다\r\n        // this.inputRef.current.value = '';\r\n        formRef.current.reset();\r\n    };\r\n\r\n    return (\r\n        <form ref={formRef} className=\"add-form\" onSubmit={onSubmit}>\r\n            <input \r\n                ref={inputRef} \r\n                type=\"text\" \r\n                className=\"add-input\" placeholder=\"Habit\" \r\n            />\r\n            <button className=\"add-button\">Add</button>\r\n        </form>\r\n    );\r\n});\r\n\r\nexport default HabitAddForm;","import React, { Component } from 'react';\r\nimport Habit from './habit';\r\nimport HabitAddForm from './habitAddForm';\r\n\r\nclass Habits extends Component {\r\n\r\n    handleIncrement = (habit) => {\r\n        this.props.onIncrement(habit);\r\n    }\r\n\r\n    handleDecrement = (habit) => {\r\n        this.props.onDecrement(habit);\r\n    }\r\n\r\n    handleDelete = (habit) => {\r\n        this.props.onDelete(habit);\r\n    }\r\n\r\n    handleAdd = name => {\r\n        this.props.onAdd(name);\r\n    }\r\n\r\n    render() {\r\n        console.log('habits');\r\n        return (\r\n            <div className=\"habits\">\r\n                <HabitAddForm onAdd={this.handleAdd} />\r\n                <ul>\r\n                    {this.props.habits.map(habit => (\r\n                        <Habit \r\n                            key={habit.id} \r\n                            habit={habit} \r\n                            onIncrement={this.handleIncrement} \r\n                            onDecrement={this.handleDecrement}\r\n                            onDelete={this.handleDelete}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n                <button className=\"habits-reset\" onClick={this.props.onReset}>Reset All</button>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Habits;","import React, { PureComponent } from 'react';\r\n\r\nclass Navbar extends PureComponent {\r\n    render() {\r\n        console.log('navbar');\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <i className=\"navbar-logo fas fa-clipboard-list\"></i>\r\n                <span>Habit Tracker</span>\r\n                <span className=\"navbar-count\">{this.props.totalCount}</span>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\nimport reactDom from 'react-dom';\nimport './app.css';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\n\nclass App extends Component {\n  state = {\n    habits: [\n        {id: 1, name: 'Reading', count: 0}, \n        {id: 2, name: 'Running', count: 0}, \n        {id: 3, name: 'Coding', count: 0}\n    ]\n  }\n\n  handleIncrement = (habit) => {\n    const habits = this.state.habits.map(item => { // 새로운 로컬 변수인 habits는 state에 있는 habits을 빙글빙글 돌면서 기존에 있는 item을 다른 걸로 바꾼다\n      if(item.id === habit.id) { // 만약 item의 id가 업데이트해야 되는 habit의 id와 동일하다면\n        return { ...habit, count: habit.count + 1}; // 새로운 habit을 리턴. 다른 것은 다 똑같이 복사해 오고 count만 habit의 count + 1로 덮어 쓴다\n      }\n      return item; // id가 같지 않다면 기존에 받은 item을 리턴\n    })\n    this.setState({habits}); // state에 반영\n  }\n\n  handleDecrement = (habit) => {\n    const habits = this.state.habits.map(item => { // 새로운 로컬 변수인 habits는 state에 있는 habits을 빙글빙글 돌면서 기존에 있는 item을 다른 걸로 바꾼다\n      if(item.id === habit.id) { // 만약 item의 id가 업데이트해야 되는 habit의 id와 동일하다면\n        const count = habit.count - 1; // count에 -1을 새로 저장해주고\n        return { ...habit, count: count < 0 ? 0 : count}; // 새로운 habit을 리턴. 다른 것은 다 똑같이 복사해 오고 count만 0보다 작을 때는 0을, 그렇지 않을 땐 새로운 count로 덮어 쓴다\n      }\n      return item; // id가 같지 않다면 기존에 받은 item을 리턴\n    })\n    this.setState({habits}); // state에 반영\n  }\n\n  handleDelete = (habit) => {\n    const habits = this.state.habits.filter(item => item.id !== habit.id); // 새로운 로컬변수 habits에 this.state에 있는 habits을 빙글빙글 돌면서 item을 전달받아 배열에 있는 item의 id가 habit의 아이디와 동일하지 않는 것만 뽑아서 복사\n    this.setState({habits}); // state에 반영\n  }\n\n  handleAdd = name => {\n    const habits = [...this.state.habits, {id: Date.now(), name, count: 0}]; // 기존 state의 배열을 복사해 오고, 주어진 이름을 이용해서 새로운 habit을 만든다. id는 밀리세컨드까지 입력되는 Date.now()로 받아옴\n    this.setState({habits}); // state에 반영\n  }\n\n  handlleReset = () => { // 리셋은 아무것도 받지 않고 처리\n    const habits = this.state.habits.map(habit => {\n      if (habit.count !== 0) {\n        return {...habit, count : 0};\n      }\n      return habit;\n    })\n    this.setState({habits});\n  }\n\n  render() {\n    console.log('app');\n    return (\n      <>\n        <Navbar totalCount={this.state.habits.filter(item => item.count > 0).length} /> \n        <Habits \n          habits = {this.state.habits}\n          onIncrement={this.handleIncrement} \n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onAdd={this.handleAdd}\n          onReset={this.handlleReset}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}